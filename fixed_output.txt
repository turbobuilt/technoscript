DEBUG: Program started
DEBUG: About to process command line arguments
DEBUG: No command line args, reading from stdin
DEBUG: Checking stdin availability
DEBUG: Skipping stdin read, using default test
DEBUG: Using default test code
=== Testing complex nested closures with multiple scope levels ===
DEBUG: Starting parsing...
DEBUG: Parsing completed successfully
DEBUG: Starting analysis...
DEBUG Analyzer: Starting collectVariables...
DEBUG Analyzer: collectVariables completed
DEBUG Analyzer: Starting setupParentPointers...
DEBUG Analyzer: setupParentPointers completed
DEBUG Analyzer: Starting analyzeScope...
DEBUG findVariable: Looking for 'param_z' from scope depth 3
DEBUG findVariable: Starting parent traversal from scope depth 3
DEBUG findVariable: Checking scope depth 2 (traversal #1)
DEBUG findVariable: Checking scope depth 1 (traversal #2)
DEBUG findVariable: Checking scope depth 0 (traversal #3)
DEBUG findVariable: Checking current scope for 'param_z'
DEBUG findVariable: Found 'param_z' in current scope
DEBUG findVariable: Looking for 'param_y' from scope depth 3
DEBUG findVariable: Starting parent traversal from scope depth 3
DEBUG findVariable: Checking scope depth 2 (traversal #1)
DEBUG findVariable: Found 'param_y' in scope depth 2
DEBUG findVariable: Adding dependencies for 'param_y'
DEBUG findVariable: Dependencies added successfully for 'param_y'
DEBUG findVariable: Looking for 'param_x' from scope depth 3
DEBUG findVariable: Starting parent traversal from scope depth 3
DEBUG findVariable: Checking scope depth 2 (traversal #1)
DEBUG findVariable: Checking scope depth 1 (traversal #2)
DEBUG findVariable: Found 'param_x' in scope depth 1
DEBUG findVariable: Adding dependencies for 'param_x'
DEBUG findVariable: Adding descendant dep to scope depth 2 (dep traversal #1)
DEBUG findVariable: Dependencies added successfully for 'param_x'
DEBUG findVariable: Looking for 'middle_var' from scope depth 3
DEBUG findVariable: Starting parent traversal from scope depth 3
DEBUG findVariable: Checking scope depth 2 (traversal #1)
DEBUG findVariable: Found 'middle_var' in scope depth 2
DEBUG findVariable: Adding dependencies for 'middle_var'
DEBUG findVariable: Dependencies added successfully for 'middle_var'
DEBUG findVariable: Looking for 'outer_var' from scope depth 3
DEBUG findVariable: Starting parent traversal from scope depth 3
DEBUG findVariable: Checking scope depth 2 (traversal #1)
DEBUG findVariable: Checking scope depth 1 (traversal #2)
DEBUG findVariable: Found 'outer_var' in scope depth 1
DEBUG findVariable: Adding dependencies for 'outer_var'
DEBUG findVariable: Adding descendant dep to scope depth 2 (dep traversal #1)
DEBUG findVariable: Dependencies added successfully for 'outer_var'
DEBUG findVariable: Looking for 'global_a' from scope depth 3
DEBUG findVariable: Starting parent traversal from scope depth 3
DEBUG findVariable: Checking scope depth 2 (traversal #1)
DEBUG findVariable: Checking scope depth 1 (traversal #2)
DEBUG findVariable: Checking scope depth 0 (traversal #3)
DEBUG findVariable: Found 'global_a' in scope depth 0
DEBUG findVariable: Adding dependencies for 'global_a'
DEBUG findVariable: Adding descendant dep to scope depth 2 (dep traversal #1)
DEBUG findVariable: Adding descendant dep to scope depth 1 (dep traversal #2)
DEBUG findVariable: Dependencies added successfully for 'global_a'
DEBUG findVariable: Looking for 'global_b' from scope depth 3
DEBUG findVariable: Starting parent traversal from scope depth 3
DEBUG findVariable: Checking scope depth 2 (traversal #1)
DEBUG findVariable: Checking scope depth 1 (traversal #2)
DEBUG findVariable: Checking scope depth 0 (traversal #3)
DEBUG findVariable: Found 'global_b' in scope depth 0
DEBUG findVariable: Adding dependencies for 'global_b'
DEBUG findVariable: Adding descendant dep to scope depth 2 (dep traversal #1)
DEBUG findVariable: Adding descendant dep to scope depth 1 (dep traversal #2)
DEBUG findVariable: Dependencies added successfully for 'global_b'
DEBUG findVariable: Looking for 'inner' from scope depth 2
DEBUG findVariable: Starting parent traversal from scope depth 2
DEBUG findVariable: Checking scope depth 1 (traversal #1)
DEBUG findVariable: Checking scope depth 0 (traversal #2)
DEBUG findVariable: Checking current scope for 'inner'
DEBUG findVariable: Found 'inner' in current scope
DEBUG findVariable: Looking for 'middle_var' from scope depth 2
DEBUG findVariable: Starting parent traversal from scope depth 2
DEBUG findVariable: Checking scope depth 1 (traversal #1)
DEBUG findVariable: Checking scope depth 0 (traversal #2)
DEBUG findVariable: Checking current scope for 'middle_var'
DEBUG findVariable: Found 'middle_var' in current scope
DEBUG findVariable: Looking for 'param_y' from scope depth 2
DEBUG findVariable: Starting parent traversal from scope depth 2
DEBUG findVariable: Checking scope depth 1 (traversal #1)
DEBUG findVariable: Checking scope depth 0 (traversal #2)
DEBUG findVariable: Checking current scope for 'param_y'
DEBUG findVariable: Found 'param_y' in current scope
DEBUG findVariable: Looking for 'middle' from scope depth 1
DEBUG findVariable: Starting parent traversal from scope depth 1
DEBUG findVariable: Checking scope depth 0 (traversal #1)
DEBUG findVariable: Checking current scope for 'middle'
DEBUG findVariable: Found 'middle' in current scope
DEBUG findVariable: Looking for 'outer_var' from scope depth 1
DEBUG findVariable: Starting parent traversal from scope depth 1
DEBUG findVariable: Checking scope depth 0 (traversal #1)
DEBUG findVariable: Checking current scope for 'outer_var'
DEBUG findVariable: Found 'outer_var' in current scope
DEBUG findVariable: Looking for 'param_x' from scope depth 1
DEBUG findVariable: Starting parent traversal from scope depth 1
DEBUG findVariable: Checking scope depth 0 (traversal #1)
DEBUG findVariable: Checking current scope for 'param_x'
DEBUG findVariable: Found 'param_x' in current scope
DEBUG findVariable: Looking for 'outer' from scope depth 0
DEBUG findVariable: Starting parent traversal from scope depth 0
DEBUG findVariable: Checking current scope for 'outer'
DEBUG findVariable: Found 'outer' in current scope
DEBUG findVariable: Looking for 'global_a' from scope depth 0
DEBUG findVariable: Starting parent traversal from scope depth 0
DEBUG findVariable: Checking current scope for 'global_a'
DEBUG findVariable: Found 'global_a' in current scope
DEBUG Analyzer: analyzeScope completed
DEBUG Analyzer: Starting updateAllNeededArrays...
DEBUG Analyzer: updateAllNeededArrays completed
DEBUG Analyzer: Starting packScopes...
DEBUG pack: Variable 'global_a' assigned offset 0 (size=8)
DEBUG pack: Variable 'global_b' assigned offset 8 (size=8)
DEBUG pack: Variable 'outer' assigned offset 16 (size=8)
DEBUG pack: Parameter 'param_x' assigned offset 0 (size=8)
DEBUG pack: Hidden parameter for depth 0 assigned offset 8
DEBUG pack: Variable 'middle' assigned offset 16 (size=8)
DEBUG pack: Variable 'outer_var' assigned offset 24 (size=8)
DEBUG pack: Parameter 'param_y' assigned offset 0 (size=8)
DEBUG pack: Hidden parameter for depth 0 assigned offset 8
DEBUG pack: Hidden parameter for depth 1 assigned offset 16
DEBUG pack: Variable 'inner' assigned offset 24 (size=8)
DEBUG pack: Variable 'middle_var' assigned offset 32 (size=8)
DEBUG pack: Parameter 'param_z' assigned offset 0 (size=8)
DEBUG pack: Hidden parameter for depth 0 assigned offset 8
DEBUG pack: Hidden parameter for depth 1 assigned offset 16
DEBUG pack: Hidden parameter for depth 2 assigned offset 24
DEBUG Analyzer: packScopes completed
DEBUG Analyzer: Starting buildAllScopeDepthToParentParameterIndexMaps...
DEBUG buildScopeDepthToParentParameterIndexMap: Function 'outer' has 1 regular params, needs 1 scopes
DEBUG buildScopeDepthToParentParameterIndexMap: depth 0 -> param index 1 (regular params=1 + hidden offset=0)
DEBUG buildScopeDepthToParentParameterIndexMap: Final map for function 'outer':
DEBUG:   depth 0 -> param index 1
DEBUG buildScopeDepthToParentParameterIndexMap: Function 'middle' has 1 regular params, needs 2 scopes
DEBUG buildScopeDepthToParentParameterIndexMap: depth 0 -> param index 1 (regular params=1 + hidden offset=0)
DEBUG buildScopeDepthToParentParameterIndexMap: depth 1 -> param index 2 (regular params=1 + hidden offset=1)
DEBUG buildScopeDepthToParentParameterIndexMap: Final map for function 'middle':
DEBUG:   depth 0 -> param index 1
DEBUG:   depth 1 -> param index 2
DEBUG buildScopeDepthToParentParameterIndexMap: Function 'inner' has 1 regular params, needs 3 scopes
DEBUG buildScopeDepthToParentParameterIndexMap: depth 0 -> param index 1 (regular params=1 + hidden offset=0)
DEBUG buildScopeDepthToParentParameterIndexMap: depth 1 -> param index 2 (regular params=1 + hidden offset=1)
DEBUG buildScopeDepthToParentParameterIndexMap: depth 2 -> param index 3 (regular params=1 + hidden offset=2)
DEBUG buildScopeDepthToParentParameterIndexMap: Final map for function 'inner':
DEBUG:   depth 0 -> param index 1
DEBUG:   depth 1 -> param index 2
DEBUG:   depth 2 -> param index 3
DEBUG Analyzer: buildAllScopeDepthToParentParameterIndexMaps completed
DEBUG: Analysis completed successfully
DEBUG: Actual print_int64 address: 0x5b559054bb2b
DEBUG: Starting code generation...
DEBUG initExternFunctions: storing print_int64 at address 0x5b559054bb2b
DEBUG createClosures: Starting for scope at depth 0, type=1
DEBUG createClosures: Scope has 3 variables
DEBUG createClosures: Processing variable 'global_a', type=1
DEBUG createClosures: Processing variable 'global_b', type=1
DEBUG createClosures: Processing variable 'outer', type=2
DEBUG createClosures: Creating closure for function 'outer'
DEBUG createClosures: Function 'outer' needs 1 parent scopes
DEBUG createClosures: Storing 1 parent scope addresses for function 'outer'
DEBUG createClosures: Processing scope dependency 1/1: depth=0
DEBUG createClosures: Found parameter mapping: depth 0 -> absolute param index 1
DEBUG createClosures: Creating closure - loading scope for depth 0 from absolute param 1
DEBUG: Storing current scope (R15) for depth 0
DEBUG: generateClosureCall - calling function 'outer' with 1 args, 1 hidden params
DEBUG: Processing regular parameter 0
DEBUG loadVariableIntoRegister: var='global_a' paramIndex=-1
DEBUG: node=0x5b55a4f732e0, definingScope=0x5b55a4f70650 (depth=0), accessingScope=0x5b55a4f70650 (depth=0)
DEBUG: var defined in scope depth=0
DEBUG: var accessed in scope depth=0
DEBUG: Loading from current scope R15+0
DEBUG: Moving parameter 0 from RAX to RDI
DEBUG loadVariableDefiningScopeAddressIntoRegister: var='outer' paramIndex=-1 paramOffset=0
DEBUG: var defined in scope depth=0
DEBUG: var accessed in scope depth=0
DEBUG: Loading current scope address from R15
DEBUG: target_reg = 10, Register::R15 = 15
DEBUG: Target register is NOT R15, calling emitMovRegFromReg
DEBUG: Processing hidden parameter 0 (total param index 1)
DEBUG: Moving hidden param 0 from RAX to RSI
DEBUG loadVariableDefiningScopeAddressIntoRegister: var='outer' paramIndex=-1 paramOffset=0
DEBUG: var defined in scope depth=0
DEBUG: var accessed in scope depth=0
DEBUG: Loading current scope address from R15
DEBUG: target_reg = 11, Register::R15 = 15
DEBUG: Target register is NOT R15, calling emitMovRegFromReg
DEBUG: About to call function
DEBUG: === STARTING code generation for function 'outer' at depth=1 ===
DEBUG: === STARTING function prologue for 'outer' ===
DEBUG: Function has 1 regular params and 1 hidden params
DEBUG: Saving parameter registers before heap allocation
DEBUG: Allocating heap memory for function scope (size=32)
DEBUG: Copying parameter 0 ('param_x') to offset 0
DEBUG: Copying from RDI to R15+0
DEBUG: Copying hidden parameter 0 (total param index 1) to offset 8
DEBUG: Creating closures for function 'outer' scope
DEBUG createClosures: Starting for scope at depth 1, type=3
DEBUG createClosures: Scope has 3 variables
DEBUG createClosures: Processing variable 'middle', type=2
DEBUG createClosures: Creating closure for function 'middle'
DEBUG createClosures: Function 'middle' needs 2 parent scopes
DEBUG createClosures: Storing 2 parent scope addresses for function 'middle'
DEBUG createClosures: Processing scope dependency 1/2: depth=0
DEBUG createClosures: Found parameter mapping: depth 0 -> absolute param index 1
DEBUG createClosures: Creating closure - loading scope for depth 0 from absolute param 1
DEBUG createClosures: Looking for parent function scope from depth 1
DEBUG createClosures: Starting scope traversal from depth 1 to find parent function
DEBUG createClosures: Traversal completed after 0 steps
DEBUG createClosures: Found function scope at depth 1 (type=3)
DEBUG: Loading scope for depth 0 from param offset 8
DEBUG createClosures: Processing scope dependency 2/2: depth=1
DEBUG createClosures: Found parameter mapping: depth 1 -> absolute param index 2
DEBUG createClosures: Creating closure - loading scope for depth 1 from absolute param 2
DEBUG: Storing current scope (R15) for depth 1
DEBUG createClosures: Processing variable 'outer_var', type=1
DEBUG createClosures: Processing variable 'param_x', type=1
DEBUG: === STARTING code generation for function 'middle' at depth=2 ===
DEBUG: === STARTING function prologue for 'middle' ===
DEBUG: Function has 1 regular params and 2 hidden params
DEBUG: Saving parameter registers before heap allocation
DEBUG: Allocating heap memory for function scope (size=40)
DEBUG: Copying parameter 0 ('param_y') to offset 0
DEBUG: Copying from RDI to R15+0
DEBUG: Copying hidden parameter 0 (total param index 1) to offset 8
DEBUG: Copying hidden parameter 1 (total param index 2) to offset 16
DEBUG: Creating closures for function 'middle' scope
DEBUG createClosures: Starting for scope at depth 2, type=3
DEBUG createClosures: Scope has 3 variables
DEBUG createClosures: Processing variable 'inner', type=2
DEBUG createClosures: Creating closure for function 'inner'
DEBUG createClosures: Function 'inner' needs 3 parent scopes
DEBUG createClosures: Storing 3 parent scope addresses for function 'inner'
DEBUG createClosures: Processing scope dependency 1/3: depth=0
DEBUG createClosures: Found parameter mapping: depth 0 -> absolute param index 1
DEBUG createClosures: Creating closure - loading scope for depth 0 from absolute param 1
DEBUG createClosures: Looking for parent function scope from depth 2
DEBUG createClosures: Starting scope traversal from depth 2 to find parent function
DEBUG createClosures: Traversal completed after 0 steps
DEBUG createClosures: Found function scope at depth 2 (type=3)
DEBUG: Loading scope for depth 0 from param offset 8
DEBUG createClosures: Processing scope dependency 2/3: depth=1
DEBUG createClosures: Found parameter mapping: depth 1 -> absolute param index 2
DEBUG createClosures: Creating closure - loading scope for depth 1 from absolute param 2
DEBUG createClosures: Looking for parent function scope from depth 2
DEBUG createClosures: Starting scope traversal from depth 2 to find parent function
DEBUG createClosures: Traversal completed after 0 steps
DEBUG createClosures: Found function scope at depth 2 (type=3)
DEBUG: Loading scope for depth 1 from param offset 16
DEBUG createClosures: Processing scope dependency 3/3: depth=2
DEBUG createClosures: Found parameter mapping: depth 2 -> absolute param index 3
DEBUG createClosures: Creating closure - loading scope for depth 2 from absolute param 3
DEBUG: Storing current scope (R15) for depth 2
DEBUG createClosures: Processing variable 'middle_var', type=1
DEBUG createClosures: Processing variable 'param_y', type=1
DEBUG: === STARTING code generation for function 'inner' at depth=3 ===
DEBUG: === STARTING function prologue for 'inner' ===
DEBUG: Function has 1 regular params and 3 hidden params
DEBUG: Saving parameter registers before heap allocation
DEBUG: Allocating heap memory for function scope (size=32)
DEBUG: Copying parameter 0 ('param_z') to offset 0
DEBUG: Copying from RDI to R15+0
DEBUG: Copying hidden parameter 0 (total param index 1) to offset 8
DEBUG: Copying hidden parameter 1 (total param index 2) to offset 16
DEBUG: Copying hidden parameter 2 (total param index 3) to offset 24
DEBUG: Creating closures for function 'inner' scope
DEBUG createClosures: Starting for scope at depth 3, type=3
DEBUG createClosures: Scope has 1 variables
DEBUG createClosures: Processing variable 'param_z', type=1
DEBUG loadVariableIntoRegister: var='param_z' paramIndex=-1
DEBUG: node=0x5b55a4f71430, definingScope=0x5b55a4f711e0 (depth=3), accessingScope=0x5b55a4f711e0 (depth=3)
DEBUG: var defined in scope depth=3
DEBUG: var accessed in scope depth=3
DEBUG: Loading from current scope R15+0
DEBUG generatePrintStatement: retrieved print_int64 address 0x5b559054bb2b
DEBUG loadVariableIntoRegister: var='param_y' paramIndex=3
DEBUG: node=0x5b55a4f71530, definingScope=0x5b55a4f70ed0 (depth=2), accessingScope=0x5b55a4f711e0 (depth=3)
DEBUG: Should use parent scope access - checking parameter index map
DEBUG: Parameter map size: 3
DEBUG: depth 0 -> param index 1
DEBUG: depth 1 -> param index 2
DEBUG: depth 2 -> param index 3
DEBUG: var defined in scope depth=2
DEBUG: var accessed in scope depth=3
DEBUG: Loading from parent scope via parameter offset 24 + variable offset 0
DEBUG: Using parameter offset: 24
DEBUG: About to load scope address from R15+24
DEBUG: About to load variable from scope+0
DEBUG generatePrintStatement: retrieved print_int64 address 0x5b559054bb2b
DEBUG loadVariableIntoRegister: var='param_x' paramIndex=2
DEBUG: node=0x5b55a4f71630, definingScope=0x5b55a4f70c10 (depth=1), accessingScope=0x5b55a4f711e0 (depth=3)
DEBUG: Should use parent scope access - checking parameter index map
DEBUG: Parameter map size: 3
DEBUG: depth 0 -> param index 1
DEBUG: depth 1 -> param index 2
DEBUG: depth 2 -> param index 3
DEBUG: var defined in scope depth=1
DEBUG: var accessed in scope depth=3
DEBUG: Loading from parent scope via parameter offset 16 + variable offset 0
DEBUG: Using parameter offset: 16
DEBUG: About to load scope address from R15+16
DEBUG: About to load variable from scope+0
DEBUG generatePrintStatement: retrieved print_int64 address 0x5b559054bb2b
DEBUG loadVariableIntoRegister: var='middle_var' paramIndex=3
DEBUG: node=0x5b55a4f71720, definingScope=0x5b55a4f70ed0 (depth=2), accessingScope=0x5b55a4f711e0 (depth=3)
DEBUG: Should use parent scope access - checking parameter index map
DEBUG: Parameter map size: 3
DEBUG: depth 0 -> param index 1
DEBUG: depth 1 -> param index 2
DEBUG: depth 2 -> param index 3
DEBUG: var defined in scope depth=2
DEBUG: var accessed in scope depth=3
DEBUG: Loading from parent scope via parameter offset 24 + variable offset 32
DEBUG: Using parameter offset: 24
DEBUG: About to load scope address from R15+24
DEBUG: About to load variable from scope+32
DEBUG generatePrintStatement: retrieved print_int64 address 0x5b559054bb2b
DEBUG loadVariableIntoRegister: var='outer_var' paramIndex=2
DEBUG: node=0x5b55a4f717e0, definingScope=0x5b55a4f70c10 (depth=1), accessingScope=0x5b55a4f711e0 (depth=3)
DEBUG: Should use parent scope access - checking parameter index map
DEBUG: Parameter map size: 3
DEBUG: depth 0 -> param index 1
DEBUG: depth 1 -> param index 2
DEBUG: depth 2 -> param index 3
DEBUG: var defined in scope depth=1
DEBUG: var accessed in scope depth=3
DEBUG: Loading from parent scope via parameter offset 16 + variable offset 24
DEBUG: Using parameter offset: 16
DEBUG: About to load scope address from R15+16
DEBUG: About to load variable from scope+24
DEBUG generatePrintStatement: retrieved print_int64 address 0x5b559054bb2b
DEBUG loadVariableIntoRegister: var='global_a' paramIndex=1
DEBUG: node=0x5b55a4f72d60, definingScope=0x5b55a4f70650 (depth=0), accessingScope=0x5b55a4f711e0 (depth=3)
DEBUG: Should use parent scope access - checking parameter index map
DEBUG: Parameter map size: 3
DEBUG: depth 0 -> param index 1
DEBUG: depth 1 -> param index 2
DEBUG: depth 2 -> param index 3
DEBUG: var defined in scope depth=0
DEBUG: var accessed in scope depth=3
DEBUG: Loading from parent scope via parameter offset 8 + variable offset 0
DEBUG: Using parameter offset: 8
DEBUG: About to load scope address from R15+8
DEBUG: About to load variable from scope+0
DEBUG generatePrintStatement: retrieved print_int64 address 0x5b559054bb2b
DEBUG loadVariableIntoRegister: var='global_b' paramIndex=1
DEBUG: node=0x5b55a4f72e20, definingScope=0x5b55a4f70650 (depth=0), accessingScope=0x5b55a4f711e0 (depth=3)
DEBUG: Should use parent scope access - checking parameter index map
DEBUG: Parameter map size: 3
DEBUG: depth 0 -> param index 1
DEBUG: depth 1 -> param index 2
DEBUG: depth 2 -> param index 3
DEBUG: var defined in scope depth=0
DEBUG: var accessed in scope depth=3
DEBUG: Loading from parent scope via parameter offset 8 + variable offset 8
DEBUG: Using parameter offset: 8
DEBUG: About to load scope address from R15+8
DEBUG: About to load variable from scope+8
DEBUG generatePrintStatement: retrieved print_int64 address 0x5b559054bb2b
DEBUG: === FINISHED code generation for function 'inner' at depth=3 ===
DEBUG: generateClosureCall - calling function 'inner' with 1 args, 3 hidden params
DEBUG: Processing regular parameter 0
DEBUG loadVariableIntoRegister: var='middle_var' paramIndex=-1
DEBUG: node=0x5b55a4f72f20, definingScope=0x5b55a4f70ed0 (depth=2), accessingScope=0x5b55a4f70ed0 (depth=2)
DEBUG: var defined in scope depth=2
DEBUG: var accessed in scope depth=2
DEBUG: Loading from current scope R15+32
DEBUG: Moving parameter 0 from RAX to RDI
DEBUG loadVariableDefiningScopeAddressIntoRegister: var='inner' paramIndex=-1 paramOffset=0
DEBUG: var defined in scope depth=2
DEBUG: var accessed in scope depth=2
DEBUG: Loading current scope address from R15
DEBUG: target_reg = 10, Register::R15 = 15
DEBUG: Target register is NOT R15, calling emitMovRegFromReg
DEBUG: Processing hidden parameter 0 (total param index 1)
DEBUG: Moving hidden param 0 from RAX to RSI
DEBUG: Processing hidden parameter 1 (total param index 2)
DEBUG: Moving hidden param 1 from RAX to RDX
DEBUG: Processing hidden parameter 2 (total param index 3)
DEBUG: Moving hidden param 2 from RAX to RCX
DEBUG loadVariableDefiningScopeAddressIntoRegister: var='inner' paramIndex=-1 paramOffset=0
DEBUG: var defined in scope depth=2
DEBUG: var accessed in scope depth=2
DEBUG: Loading current scope address from R15
DEBUG: target_reg = 11, Register::R15 = 15
DEBUG: Target register is NOT R15, calling emitMovRegFromReg
DEBUG: About to call function
DEBUG loadVariableIntoRegister: var='param_y' paramIndex=-1
DEBUG: node=0x5b55a4f72fe0, definingScope=0x5b55a4f70ed0 (depth=2), accessingScope=0x5b55a4f70ed0 (depth=2)
DEBUG: var defined in scope depth=2
DEBUG: var accessed in scope depth=2
DEBUG: Loading from current scope R15+0
DEBUG generatePrintStatement: retrieved print_int64 address 0x5b559054bb2b
DEBUG: === FINISHED code generation for function 'middle' at depth=2 ===
DEBUG: generateClosureCall - calling function 'middle' with 1 args, 2 hidden params
DEBUG: Processing regular parameter 0
DEBUG loadVariableIntoRegister: var='outer_var' paramIndex=-1
DEBUG: node=0x5b55a4f730e0, definingScope=0x5b55a4f70c10 (depth=1), accessingScope=0x5b55a4f70c10 (depth=1)
DEBUG: var defined in scope depth=1
DEBUG: var accessed in scope depth=1
DEBUG: Loading from current scope R15+24
DEBUG: Moving parameter 0 from RAX to RDI
DEBUG loadVariableDefiningScopeAddressIntoRegister: var='middle' paramIndex=-1 paramOffset=0
DEBUG: var defined in scope depth=1
DEBUG: var accessed in scope depth=1
DEBUG: Loading current scope address from R15
DEBUG: target_reg = 10, Register::R15 = 15
DEBUG: Target register is NOT R15, calling emitMovRegFromReg
DEBUG: Processing hidden parameter 0 (total param index 1)
DEBUG: Moving hidden param 0 from RAX to RSI
DEBUG: Processing hidden parameter 1 (total param index 2)
DEBUG: Moving hidden param 1 from RAX to RDX
DEBUG loadVariableDefiningScopeAddressIntoRegister: var='middle' paramIndex=-1 paramOffset=0
DEBUG: var defined in scope depth=1
DEBUG: var accessed in scope depth=1
DEBUG: Loading current scope address from R15
DEBUG: target_reg = 11, Register::R15 = 15
DEBUG: Target register is NOT R15, calling emitMovRegFromReg
DEBUG: About to call function
DEBUG loadVariableIntoRegister: var='param_x' paramIndex=-1
DEBUG: node=0x5b55a4f731d0, definingScope=0x5b55a4f70c10 (depth=1), accessingScope=0x5b55a4f70c10 (depth=1)
DEBUG: var defined in scope depth=1
DEBUG: var accessed in scope depth=1
DEBUG: Loading from current scope R15+0
DEBUG generatePrintStatement: retrieved print_int64 address 0x5b559054bb2b
DEBUG: === FINISHED code generation for function 'outer' at depth=1 ===
DEBUG: Code generation completed successfully
DEBUG: Writing program to executable...
DEBUG: print_int64 ENTRY - called with value=100
DEBUG: About to print to stdout...
100
DEBUG: print_int64 SUCCESS - finished printing
DEBUG: print_int64 ENTRY - called with value=100
DEBUG: About to print to stdout...
100
DEBUG: print_int64 SUCCESS - finished printing
DEBUG: print_int64 ENTRY - called with value=13654333631662408
DEBUG: About to print to stdout...
13654333631662408
DEBUG: print_int64 SUCCESS - finished printing
DEBUG: print_int64 ENTRY - called with value=100
DEBUG: About to print to stdout...
100
DEBUG: print_int64 SUCCESS - finished printing
DEBUG: print_int64 ENTRY - called with value=5244311233553451472
DEBUG: About to print to stdout...
5244311233553451472
DEBUG: print_int64 SUCCESS - finished printing
DEBUG: print_int64 ENTRY - called with value=100
DEBUG: About to print to stdout...
100
DEBUG: print_int64 SUCCESS - finished printing
DEBUG: print_int64 ENTRY - called with value=200
DEBUG: About to print to stdout...
200
DEBUG: print_int64 SUCCESS - finished printing
timeout: the monitored command dumped core
